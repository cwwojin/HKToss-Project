name: Deploy to Amazon ECS

on:
    push:
        branches: ["feature/inference_api_WJ"]

env:
    AWS_REGION: ${{ secrets.MY_AWS_REGION }}
    ECR_REPOSITORY: ${{ secrets.MY_ECR_REPOSITORY }}
    ECS_CLUSTER: ${{ secrets.MY_ECS_CLUSTER }}
    ECS_SERVICE: ${{ secrets.MY_ECS_SERVICE }}
    ECS_TASK_DEFINITION: .aws/ecs-task-definition.json
    CONTAINER_NAME: ${{ secrets.MY_CONTAINER_NAME }}
    S3_BUCKET_NAME: ${{ secrets.MY_BUCKET_NAME }}

permissions:
    contents: read

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Download .env file
              uses: keithweaver/aws-s3-github-action@v1.0.0
              with:
                  command: cp
                  source: s3://${{ env.S3_BUCKET_NAME }}/env/.env
                  destination: ./.env
                  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws_region: ${{ env.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  # Build a docker container and
                  # push it to ECR so that it can
                  # be deployed to ECS.
                  docker buildx build --platform=linux/amd64 -f dockerfiles/Dockerfile.api -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                  task-definition: ${{ env.ECS_TASK_DEFINITION }}
                  container-name: ${{ env.CONTAINER_NAME }}
                  image: ${{ steps.build-image.outputs.image }}

            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: ${{ steps.task-def.outputs.task-definition }}
                  service: ${{ env.ECS_SERVICE }}
                  cluster: ${{ env.ECS_CLUSTER }}
                  wait-for-service-stability: true
