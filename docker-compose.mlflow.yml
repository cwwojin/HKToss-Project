services:
    mlflow-backend-store:
        image: postgres:16.3-alpine3.20
        container_name: mlflow-backend-store
        environment:
            POSTGRES_USER: mlflowuser
            POSTGRES_PASSWORD: mlflowpassword
            POSTGRES_DB: mlflowdatabase
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-U", "mlflowuser", "-d", "mlflowdatabase"]
            interval: 10s
            timeout: 10s
            retries: 5
        ports:
            - 5432:5432
        volumes:
            - .pgdata/:/var/lib/postgresql/data
        networks:
            - mlflow-network

    mlflow-artifact-store:
        image: minio/minio:RELEASE.2024-01-18T22-51-28Z
        container_name: mlflow-artifact-store
        ports:
            - 9000:9000
            - 9001:9001
        environment:
            MINIO_REGION: us-east-1
            MINIO_REGION_NAME: us-east-1
            MINIO_ROOT_USER: minio
            MINIO_ROOT_PASSWORD: miniostorage
        command: server /data/minio --console-address :9001
        healthcheck:
            test: ["CMD", "mc", "ready", "local"]
            interval: 10s
            timeout: 10s
            retries: 5
        volumes:
            - .minio-data/:/data
        networks:
            - mlflow-network

    mlflow-server:
        platform: linux/amd64
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile.mlflow
        container_name: mlflow-server
        depends_on:
            mlflow-backend-store:
                condition: service_healthy
                restart: true
            mlflow-artifact-store:
                condition: service_healthy
        ports:
            - 5001:5001
        environment:
            AWS_ACCESS_KEY_ID: minio
            AWS_SECRET_ACCESS_KEY: miniostorage
            MLFLOW_S3_ENDPOINT_URL: http://mlflow-artifact-store:9000
        networks:
            - mlflow-network
        command:
            - /bin/sh
            - -c
            - |
                mc config host add mlflowminio http://mlflow-artifact-store:9000 minio miniostorage &&
                mc mb --ignore-existing mlflowminio/mlflow
                mlflow server \
                --backend-store-uri postgresql://mlflowuser:mlflowpassword@mlflow-backend-store/mlflowdatabase \
                --default-artifact-root s3://mlflow/ \
                --host 0.0.0.0 \
                --port 5001

networks:
    mlflow-network:
        name: mlflow-network
        driver: bridge
